!function($,window){var classVar=function(){function DashboardCharts(){}function getData(graphName){return graphs[graphName.toLowerCase()].data}function getCommits(graphName){return graphs[graphName.toLowerCase()].commits}function loadIssues(name){nv.addGraph(function(){var chart=nv.models.stackedAreaChart().margin({right:50}).useInteractiveGuideline(!0).transitionDuration(350).showLegend(!0).showYAxis(!0).showXAxis(!0).x(function(d){return d[0]}).y(function(d){return d[1]}).showControls(!1).style("expand").color(issuesColors).noData("No issues found").interpolate("monotone");return chart.yAxis.tickFormat(d3.format(",.0d")).rotateYLabel(!1).axisLabel("Issues"),chart.xAxis.tickFormat(function(d){return getCommits(name)[d]}).tickValues(getData(name)[0].values.map(function(d){return d[0]})).showMaxMin(!1).axisLabel("Commits"),d3.select("#chart-wrapper svg").datum(getData(name)).call(chart),chart})}function getChurnMaxMin(data){var minX=1/0,maxX=0;return $.each(data,function(i,line){$.each(line.values,function(i,point){minX=Math.min(minX,point[0]),maxX=Math.max(maxX,point[0])})}),[minX,maxX+1]}function getYDomain(data){var minY=1/0,maxY=1;$.each(data,function(i,line){$.each(line.values,function(i,point){minY=Math.min(minY,point[1]),maxY=Math.max(maxY,point[1])})});var chartMaxY=Math.ceil(1.1*maxY);return[0,chartMaxY]}function loadCategories(name){var dataPoints=getData(name);nv.addGraph(function(){var chart=nv.models.lineChart().margin({right:50}).useInteractiveGuideline(!0).transitionDuration(350).showLegend(!0).showYAxis(!0).showXAxis(!0).yDomain(getYDomain(dataPoints)).x(function(d){return d[0]}).y(function(d){return d[1]}).color(colors).noData("No issues found").interpolate("monotone");return chart.yAxis.tickFormat(d3.format(",.0d")).axisLabel("Issues").rotateYLabel(!1),chart.xAxis.tickFormat(function(d){return getCommits(name)[d]}).tickValues(dataPoints.length>0?dataPoints[0].values.map(function(d){return d[0]}):0).showMaxMin(!1).axisLabel("Commits"),d3.select("#chart-wrapper svg").datum(dataPoints).call(chart),chart})}function loadComplexity(name){var dataPoints=getData(name);nv.addGraph(function(){var chart=nv.models.scatterChart().margin({right:50}).transitionDuration(350).showLegend(!1).showYAxis(!0).showXAxis(!0).x(function(d){return d[0]}).y(function(d){return d[1]}).xDomain(getChurnMaxMin(dataPoints)).color(colors).showDistX(!0).showDistY(!0);return chart.yAxis.tickFormat(d3.format(",.0d")).rotateYLabel(!1).axisLabel("Complexity"),chart.tooltipContent(function(key){return"<h3>"+key+"</h3>"}),chart.xAxis.tickFormat(d3.format(",.0d")).axisLabel("Churn"),d3.select("#chart-wrapper svg").datum(dataPoints).call(chart),chart})}function loadQuality(name){nv.addGraph(function(){var chart=nv.models.stackedAreaChart().margin({right:50}).useInteractiveGuideline(!0).transitionDuration(350).showLegend(!0).showYAxis(!0).showXAxis(!0).x(function(d){return d[0]}).y(function(d){return d[1]}).showControls(!1).style("expand").color(gradeColors).noData("No issues found").interpolate("monotone");return chart.yAxis.rotateYLabel(!1).axisLabel("Grade"),chart.xAxis.axisLabel("Commits").showMaxMin(!1).tickFormat(function(d){return getCommits(name)[d]}).tickValues(getData(name)[0].values.map(function(d){return d[0]})),d3.select("#chart-wrapper svg").datum(getData(name).sort(function(a,b){return a.key>b.key?1:a.key<b.key?-1:0})).call(chart),chart})}function loadCoverage(name){nv.addGraph(function(){var chart=nv.models.stackedAreaChart().margin({right:50}).useInteractiveGuideline(!0).transitionDuration(350).showLegend(!0).showYAxis(!0).showXAxis(!0).x(function(d){return d[0]}).y(function(d){return d[1]}).showControls(!1).style("expand").color(coverageColors).interpolate("monotone");return chart.yAxis.tickFormat(d3.format(",.0d")).rotateYLabel(!1).axisLabel("Coverage"),chart.xAxis.tickFormat(function(d){return getCommits(name)[d]}).tickValues(getData(name)[0].values.map(function(d){return d[0]})).showMaxMin(!1).axisLabel("Commits"),d3.select("#chart-wrapper svg").datum(getData(name)).call(chart),chart})}var utils=QamineUtils.getInstance(),graphs={},chartList={Issues:loadCategories,Severity:loadIssues,"Churn/Complexity":loadComplexity,"Project quality":loadQuality,Coverage:loadCoverage},chartMessages={Issues:"Breakdown of project's issues over time.<br> Each line represents how many issues Codacy detected per category and how they evolved in recent commits.<br><br>Lower values are better.",Severity:"Breakdown of the issues' severity over time.<br> Each section represents the percentage of warnings, infos and errors that Codacy detected.<br><br> Warnings and errors require the most attention because they may indicate maintainability problems or hidden bugs. Infos are usually related to your identation or code style and they may influence your code readability.","Churn/Complexity":"Churn represents the number of times each file was changed on git. When we associate this value to a file's complexity we can detect hotspots in the project.<br><br>Files that appear in the top right corner (high complexity and high churn) indicate a maintainability problem and probably need to be refactored.","Project quality":"Breakdown of file grades over time. Each section represents the percentage of files graded by Codacy in recent commits. <br><br>The more files with A or B the better. A large percentage of files graded E or F indicate a low project health.",Coverage:"Evolution of the project test coverage over time."};DashboardCharts.prototype.initCharts=function(){var name=$("#charts-container").find(".ChartOption").first().data("name");bindGraphSelection(),selectChart(name)};var instance,selectChart=function(name){var chartsContainer=$("#charts-container"),chartsText=chartsContainer.find(".chart-text");chartsText.text(name);var chartClasses="";"Churn/Complexity"!==name&&(chartClasses="commit-axis");var applyChart=function(){var $chartWrapper=$("#chart-wrapper");$chartWrapper.find(".loading").hide(),$chartWrapper.append("<svg class='"+chartClasses+'\' style="height: 330px;"></svg>'),chartList[name](name.toLowerCase())};if(graphs[name.toLowerCase()])applyChart();else{var url=$('.ChartOption[data-name="'+name+'"]').data("url");utils.request(url,function(data){graphs[name.toLowerCase()]=poorGraphAugmented(data),applyChart()},function(error){console.log("error: "+error)})}var chartPopover=$("#chart-popover");chartPopover.html('<div id="chartDescription"><i class="fa fa-question-circle"></i></div>');var chartDescription=$("#chartDescription");chartDescription.popover({title:name,content:chartMessages[name],html:!0,animation:!1,trigger:"hover",placement:"left",toggle:"popover"})},bindGraphSelection=function(){$(".ChartOption").click(function(){var $chartWrapper=$("#chart-wrapper");$chartWrapper.find("svg").remove(),$chartWrapper.find(".loading").show();var chartName=$(this).data("name");selectChart(chartName)})},firstGraphValueZero=function(graphData){var firstData=graphData.values[0][1];return graphData.values=[[0,firstData],[1,firstData]],graphData},firstGraphValueCopied=function(graphData){var firstData=graphData.values[0][1];return graphData.values=[[0,0],[1,firstData]],graphData},poorGraphAugmented=function(graph){return graph.commits&&1==graph.commits.length&&"Churn/Complexity"!=graph.name&&(graph.commits=graph.commits.concat(graph.commits),graph.data="Issues"===graph.name?_.map(graph.data,firstGraphValueCopied):_.map(graph.data,firstGraphValueZero)),graph},colors=["#2980B9","#C0392B","#16A085","#F39C12","#83BA12","#9B59B6","#6DA8FF","#FF654B","#26D598","#F1C40F","#AFDD43","#D791EA","#B6D3FF","#FFB2A5","#92EACB","#F8E187","#D7EEA1","#5B81A4","#AAA","#000"],issuesColors=["#FB6050","#EDC72C","#70a9ff"],gradeColors=["#26d598","#62d46d","#bfcf2b","#f1c410","#fb9027","#fb6050"],coverageColors=["#26d598","#fb6050"];return{getInstance:function(){return void 0===instance&&(instance=new DashboardCharts,instance.constructor=null),instance}}}();return window.DashboardCharts=classVar,window.DashboardCharts}(jQuery,window);
//# sourceMappingURL=dashboardCharts.min.js.map